package com.zhilai.facelibrary.zlfacerecog.faceutil;

public class CalUtil {

    public static void main(String[] args) {
        String strHex =
//                "00 00 00 00 55 00 00 00 7B 00 00 00 AA 00 00 00 AA 00 00 00 2D D2 11 3F 0E 33 37 3F A8 03 8C 42";
//                "52";
//                "00 00 00 00 A5 00 00 00 9D 00 00 00 A0 00 00 00 A0 00 00 00 C5 BB B2 3E D2 E3 30 3F 87 76 8A 42";
//        "00 00 00 00 B8 00 00 00 9D 00 00 00 82 00 00 00 82 00 00 00 35 93 6B 3E 89 97 45 3F 99 6F 5C 42";
        "01 00 00 00 00 02 00 00 65 68 05 BD 4B 24 B4 3C EA B7 E9 BB AC CD 8D BD DF 28 7C BC A5 75 DE 3B E4 6E 76 BD AA 7E 49 3D 24 7A C3 BC 66 C5 18 BC C8 E8 90 BD 8B 20 C5 3D 94 32 9B 3C 38 1B 87 3B ED 53 BF BD 98 D2 2F BD FE DE 0E 3D D3 88 46 3D 09 53 7D 3C 5E A7 7F BD BE 5C 9C BD 78 EA 8A 3D 60 50 5E BD DC 31 46 3C 9E 38 AE BC 0A 08 9F 3D 29 FD 4C BB 7F 4B 01 BE 55 29 81 3D 91 EF 99 3D BA CD 4F 3D EC C9 1E BC C7 22 27 BC C3 A2 16 BC 12 AE 25 3D C4 D3 E2 3C EA 7A DA BC ED 80 4C BD 10 D9 7F 3D 10 D9 FF BB 90 49 34 BD C6 02 23 BD C8 BB 83 BD 5E 3C 9D BC 10 51 12 3D CE 9B A0 3D 23 E0 20 BD 45 72 6A 3D CC 1F 4F 3C AC A1 46 3D DD BA 20 BD A1 7B 2F 3C 39 FF C1 BD 67 8B 82 3C C7 22 27 3D 24 00 25 3C 20 EB 76 BB 8C 6C 10 BB 3F 38 33 3D A1 D4 83 3D 27 BD C4 3C 91 5A 7C BB 03 F9 C1 3D 94 05 8E BD AC A0 80 BD 45 55 DF 3C BE 1F 0D 3C 21 74 51 3D 6B 48 A2 3C FB D8 9C 3D D6 6E 34 3D B7 8A 4E 3D 76 9A 80 BC 51 AA B6 BD 6F 42 51 3C B0 F3 03 BD 05 48 06 BD DD AB E4 BC 35 15 15 BD 90 66 3F 3D 4B E7 A4 BC AA 8D 05 3A 7E 51 4F BD 76 42 F2 3B 7C 11 C7 3C B4 DE 76 3D 90 66 3F BC 06 68 0A BC 45 27 8C 3C F0 D2 09 BD C5 A5 0F BD C5 1F 2E BC AF 10 0F 3C C3 DF A5 3C CE 8B 1E BD 0B 55 B0 BD FF 0F 5B 3D 47 2A 05 BD 62 36 CC 3C 3E EC 67 BD C5 78 82 BD 3D 52 C5 BD A3 24 0E BD ED 26 32 BD 5D 39 24 3C 1E AB 6E BD 4A 15 78 BC 63 45 88 BB C3 0D 79 BC 7D 40 07 BD 96 AF B2 BC DD 40 82 BD B4 84 5C BC D7 34 1E BD 23 97 4E 3D C8 42 2B BD 7C 4E 56 BA 04 65 91 BC B6 01 74 BC 4F 1D 9D BD E9 B4 F0 3C E2 3D 2A 3C 5B 27 EF 3A 18 BA 89 BC A6 FE B8 3C 7B 5A 19 BC 4E 84 C0 3D E3 C6 04 3B 39 2C 4F BD AD FE D9 BC E8 49 0E BC F2 C6 C6 3C C2 19 BC 3C 48 1E C2 3B 30 FD ED 3B 61 42 8F BB 79 DD 81 BD B9 9C 03 BC 19 AE 46 3D 2E 06 B8 3B F0 D2 89 BD 7B 4B 5D 3C 43 5E 29 BD BB 56 AA BD 59 13 2E BD E9 97 65 BD 09 D9 5E BC CA 93 7B 3B D0 9F 5F BB C8 AB 01 BB 71 54 06 BB F8 0F 3A BD E6 BD BA 3C D4 6B BB 3C 0C A2 C1 BC 9C AC DA 3C 94 32 9B 3D 50 6A 2E BD 5C 2A 68 BB 51 21 5C BC A3 7E 28 3C BA 27 6A BD 2D C9 A8 BC A7 F2 75 BD 72 0B 34 3D EB 4F 00 3D C9 9F BE BC 97 66 E0 BB 6E 02 C9 BC 9F FE 17 3D 10 D9 FF BC FB D8 9C BB E0 74 C7 3C 01 22 90 BC A5 FB BF BC 42 6C 78 BD D3 A5 D1 BA 96 EC 41 3C F7 58 0C BD E5 43 9C 3D 0C 76 7A BD D2 B1 14 3C E8 FD C2 BC B6 10 B0 BC 7A D1 BE BC 93 40 6A 3D 09 16 6E 3D 4D 64 BC BC FD 0B 9C BD AB 35 77 3D D7 71 AD 3C 3B 12 BD 3D A0 F2 D4 BC 46 A1 2A BD 78 45 EB BB 60 3F 16 BC F4 15 8B 3C 12 28 44 3D 32 69 3D BD 2C 6C 15 3D 06 E2 A8 BB AF 01 D3 3C 29 FD CC 3C 41 C4 86 3D 82 5A BA 3A 88 29 8F 3C 8D 9D DC BC D2 B1 14 3D 12 65 D3 3C CF AB 22 3D D9 94 2A BD 10 E8 BB 3C CC B5 B2 3D F6 CF 31 3B 51 30 98 BB 51 03 8B 3D B4 84 DC BA E7 1A 4E 3D EA 5C 89 3D 1B 2B DE BC FA 06 F0 3C 16 7A 01 BD 60 7C 25 BD 19 EB 55 BD 60 3F 16 3C 64 CF A8 BD 2B 00 C6 BB 90 E0 DD BC 22 A3 11 3D 62 62 13 BD AC FB E0 3C 5E FF 8D BC 59 50 3D 3D 37 CF BB 3C EF C0 D4 BA 64 DF 2A BD CB 68 21 3D C3 75 89 BD 4E 3B 6E 3D DD 40 02 BD B1 13 08 3D 21 74 D1 BC 03 CD FA BB C1 16 43 BC 94 60 EE 3C E2 C3 8B BC AD C1 CA 3C 1D B7 B1 3C E5 F7 D0 3C 38 58 96 BC FE DE 0E 3D 52 61 E4 3C 52 61 64 3D A4 72 65 3D 3E 92 CD BC 43 D8 C7 BC 40 D2 D5 BC 32 D2 93 BC B9 9C 03 3C 63 45 08 BC B6 87 55 BC 64 65 0C 3D 7A EE 49 BD A6 FE B8 BC FD CF D2 BB CD A8 A9 3B 35 80 77 BC DC 30 80 BD 90 B2 0A 3D 73 85 52 3D 05 76 59 3D 9D 81 80 3B 1C 5B E4 BD 82 5A BA 3D 30 92 0B BD 64 D0 6E BD AC 38 F0 3C F0 C3 CD 3B 34 E5 8E BD DD 6E 55 3D B4 C1 EB BC A6 FE 38 BD 8B 9A 63 BD BB 2A 63 3D 1E 31 D0 3C B6 D3 A0 BD 6C A5 35 3D 55 2A 47 3D C5 F2 A0 3D ED 53 BF BD EA 4C 87 3C 17 E8 DC 3B F5 36 D5 3D 30 83 4F 3C 19 BD 82 3C 62 36 4C 3C 6B 85 B1 BC B6 59 82 3C 18 71 37 3C C3 A2 96 3B 7D 20 83 3D FC DB 15 BD F7 58 0C 3D 81 FD 26 BD 17 31 AF BC 6A AF C5 3D C9 9F BE 3B 3A 89 62 3D E4 D7 4C 3D 1C 00 84 3D 41 F1 93 BD 3E DC E5 3D A6 1B 44 3D 26 34 EA BC C9 56 6C 3D C2 ED 74 3D BD 59 A3 BC 7E 60 0B BC 55 ED B7 BC 5E 2D 61 3C 6D C5 39 3D 98 EF 3A BC 2E 80 56 3C F0 C3 4D 3D 3F 1B A8 3B E6 80 AB 3C 6C 0E 8C 3C 79 91 B6 3C 1C F1 47 3C 07 D6 65 3A F5 EC 3C BD 1D 6B 66 BD 0A AE 04 BD E9 B4 F0 3A 20 AD A1 BD 07 A8 92 BC 5D 39 A4 3C 79 DD 81 3C 75 3F 79 3C 77 CB CC BC 06 A5 99 BC 3B A8 A0 3D 31 E0 62 BD 9C CB 98 3D 9C F8 25 3D 09 E8 9A 3C 8F 72 02 3B 2C 03 3F BD 8F 72 82 3B 5C B0 C9 BC 98 69 D9 3D 4B 9E 52 BD 0D 68 AB BC 82 B4 54 BD C2 DD F2 BD 29 29 94 3D E9 00 BC BC D5 31 25 BC 6B 0B 93 BC AF C4 C3 BC EF C0 D4 3A 2D 7D 5D 3C 53 53 95 3D 4A F5 73 3D 10 6E 1D BD D1 A2 58 3B 49 21 BB BB 4E 2A A6 BC 78 DA 08 BC 87 63 25 BD E7 C0 B3 BC 76 42 F2 39 5C FC 94 BD 56 A4 E5 3C 9A E6 F0 3C 66 02 A8 3C 76 6E 39 3D 97 49 D5 3D 89 49 93 BD 4D 0A 22 3D 2A 0C 89 3C CD 99 6D BC E1 3A B1 3C 51 F3 08 BD 1B A5 FC 3C 36 63 6C 3D 43 15 57 3C 21 B1 E0 BC 54 A1 6C 3D 27 71 79 3C 23 2E F8 3C FB D8 9C 3B BC 93 B9 3C C3 92 94 3D 6F 8B 23 BD 92 5D F5 BB EF 0C A0 BD 16 F4 9F BB 06 D3 6C 3D 37 30 11 3E 4E 2A 26 3D E9 C3 2C 3C CF AB 22 BC B6 01 74 3C 37 83 70 BD 94 15 10 3D D8 A2 79 3C DF FA A8 3C DB D4 32 BD 44 52 E6 BD 3F A1 89 BC EE 37 7A 3D 65 D3 67 BD 8F DD 64 3C 1C F1 47 BD DF BD 99 BA C4 D3 E2 3C 9A E6 F0 BC 12 AE 25 3D EB 7D 53 3D 67 3F 37 BA 37 83 70 BC 80 63 04 3C 78 45 6B BC 52 24 D5 3C 8A 69 17 BD DB 2E CD 3C 59 8D 4C BD 5B 36 AB BB D5 5F F8 3C 29 66 23 3D 3F EF 60 3D 3A C6 71 BD 3F 0C 6C BC 61 D9 38 3D 1D A8 F5 BC E4 BA C1 BB 28 74 72 3D D7 45 66 BD ED 43 BD 3C D1 CE 1F 3D 70 62 D5 3D 52 61 E4 BC C2 19 3C 3D C2 55 85 BD 50 10 14 BD 45 EB C2 BD 0C EE 8C 3C 28 63 AA BD 9A 7B 0E 3D F2 7D F4 BC 96 72 A3 BB 7D 5D 12 3D 29 83 2E 3C 74 0E AD BC C3 A2 16 BB 81 1A B2 3C F3 6F A5 BD FA F5 A7 BD 8A 69 17 3D 81 57 C1 BC B4 73 14 BD 6D 79 EE BC 3B 8C 5B BD 90 66 3F 3C 1C 1E D5 BD 9B 6F 4B 3B 5D 76 B3 BC 66 88 09 BD 58 9A D5 3D 76 C8 53 BD F9 D5 23 3C 59 AA 57 3C E0 83 03 BD D8 28 5B BC 58 B6 1A 3C 45 18 50 3B 19 FA 91 3C CC 1F 4F BD 95 A0 F6 3C 66 C5 98 3D B2 07 C5 3C 7B 5A 19 3C 0E 1F 59 3D A0 1F E2 BD EC C9 9E BC 93 E6 4F 3C 70 51 8D BC 70 CB 2B BD 1B FD 0A 3B 16 E4 9D 3D 12 EB 34 BC A7 E1 2D BD D9 2B D4 3C C1 F9 37 3D C5 78 82 BD 85 F7 55 BD 0B 56 76 3C C2 BF 21 3D A6 58 53 BD 29 C0 BD 3C 1F F7 39 BC EE EC 9B 3D C3 0D F9 3C 03 F9 41 BD CA 65 28 BD B0 20 91 3D 5B 27 6F BB E7 C0 33 3C 97 B2 2B 3D C3 65 87 BC BC 39 1F 3D";
                System.out.println(
                ByteUtil.bytesToHexString(
                        new byte[]{crc8Arrays(
                                strHex)}, ""));
    }

    private static byte[] str2bytes(String s) {
        String[] split = s.split(" ");
        byte[] bytes = new byte[split.length];
        for (int i = 0; i < bytes.length; i++) {
            bytes[i] = (byte) Integer.parseInt(split[i], 16);
        }
        return bytes;
    }

    public static byte crc8Arrays(String s) {
        return crc8Arrays(str2bytes(s));
    }

    private static int update(int crc, byte b) {
        crc ^= b;
        for (int j = 0; j < 8; j++) {
            if ((crc & 0x80) != 0) {
                crc = ((crc << 1) ^ 0x07);
            } else {
                crc = (crc << 1);
            }
        }
        crc &= 0xff;
        return crc;
    }

    public static byte crc8Arrays(byte[] datas) {
        int crc = 0;
        for (byte b : datas) {
            crc = update(crc, b);
        }
        return (byte) crc;
    }
}
